# use CircleCI 2.0
version: 2
jobs:
  build:
    parallelism: 1
    # directory where steps will run
    working_directory: ~/annict
    docker:
      - image: annict/ruby:2.6.5-node_10.16.3
        environment:
          ANNICT_ASSET_URL: http://localhost:3030
          BUNDLE_JOBS: 3
          BUNDLE_PATH: vendor/bundle
          BUNDLE_RETRY: 3
          CC_TEST_REPORTER_ID: 473c071c4d1900d58ceed984bd49d8a39368393ce6f010cf5d52287f3072f6ef
          COVERAGE: true
          POSTGRES_HOST: localhost
          RAILS_ENV: test
          TZ: Asia/Tokyo
          # The `CFLAGS` and `CXXFLAGS` are required to install cld gem
          # https://github.com/jtoy/cld/issues/10
          CFLAGS: -Wno-narrowing
          CXXFLAGS: -Wno-narrowing
          SELENIUM_DRIVER_URL: http://localhost:4444/wd/hub
      - image: circleci/postgres:10.4-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: annict_test
          POSTGRES_PASSWORD: ""
      - image: selenium/standalone-chrome:latest
    steps:
      # special step to check out source code to working directory
      - checkout

      # Restore Bundler cache
      - restore_cache:
          keys:
            - v2-annict-bundler-{{ checksum "Gemfile.lock" }}
            - v2-annict-bundler-

      # Install Bundler
      - run:
          name: Install Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Store Bundler cache
      - save_cache:
          key: v2-annict-bundler-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Restore yarn cache
      - restore_cache:
          keys:
            - v2-annict-yarn-{{ checksum "yarn.lock" }}
            - v2-annict-yarn-

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      # Store yarn cache
      - save_cache:
          key: v2-annict-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Run heroku-postbuild
          command: yarn heroku-postbuild

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
    
      - run:
          name: Wait for Selenium
          command: dockerize -wait tcp://localhost:4444 -timeout 1m

      - run:
          name: Setup Database
          command: |
            bin/rails db:create
            bin/rails db:structure:load

      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run:
          name: Run RSpec
          command: |
            ./cc-test-reporter before-build
            bundle exec rspec --profile 1 \
                              --format RspecJunitFormatter \
                              --out test_results/rspec.xml \
                              --format documentation \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
            ./cc-test-reporter after-build --coverage-input-type simplecov --exit-code $?

      # Save test results for timing analysis
      - store_test_results:
          path: test_results
