- title = t "head.title.episodes.show", work_title: @work.local_title, episode_title_with_number: @episode.title_with_number(fallback: false)
- description = meta_description(t("head.meta.description.episodes.show", work_title: @work.local_title, episode_title_with_number: @episode.title_with_number))
- keywords = meta_keywords(@work.local_title)
- image_url = ann_image_url(@work.work_image, :image, size: "640x", ratio: "3:4")
- set_meta_tags(title: title, description: description, keywords: keywords, og: { description: description, image: image_url }, twitter: { description: description, image: image_url }, reverse: true, prefix: false)

- breadcrumb :episode_detail, @episode

= render "works/header", work: @work

.c-card.mb-3.py-3
  = render "episodes/nav", work: @work, episode: @episode, all_episode_records: @all_episode_records

.c-card.mb-3.py-3
  - if user_signed_in?
    .container
      = render "episode_records/form", episode_record: @episode_record
    hr
  .container
    - if user_signed_in?
      .text-center.mb-3
        .btn-group.btn-group-sm
          = active_link_to switch_episode_records_path(@episode, to: :all_comments), class: "btn", class_active: "btn-primary", class_inactive: "btn-secondary", active: (user_signed_in? ? current_user.setting.display_option_record_list.all_comments? : false ), data: { method: :post } do
            .u-very-small
              = t "noun.all_comments"
              span.ml-1 = "(#{@all_comment_episode_records.total_count})"
          = active_link_to switch_episode_records_path(@episode, to: :friend_comments), class: "btn", class_active: "btn-primary", class_inactive: "btn-secondary", active: (user_signed_in? ? current_user.setting.display_option_record_list.friend_comments? : false ), data: { method: :post } do
            .u-very-small
              = t "noun.friend_comments"
              span.ml-1 = "(#{@friend_comment_episode_records.total_count})"
          = active_link_to switch_episode_records_path(@episode, to: :my_episode_records), class: "btn", class_active: "btn-primary", class_inactive: "btn-secondary", active: (user_signed_in? ? current_user.setting.display_option_record_list.my_episode_records? : false ), data: { method: :post } do
            .u-very-small
              = t "noun.my_records"
              span.ml-1 = "(#{@my_episode_records.total_count})"
    - if @selected_comment_episode_records.present?
      - if user_signed_in?
        .text-right.mb-3
          c-record-sorter current-url="#{request.url}"
      .c-record-list
        - @selected_comment_episode_records.each do |episode_record|
          = render "episode_records/episode_record", episode_record: episode_record, is_spoiler: @is_spoiler
      - if @selected_comment_episode_records.total_pages > 1
        .mt-4.text-center
          = paginate @selected_comment_episode_records
    - else
      = render "application/components/empty", text: t("messages.episodes.no_comments")

= render "application/components/breadcrumb"
= render "application/components/footer"

- content_for :js_templates do
  = render "application/js_templates/like_button"
  = render "application/js_templates/mute_user_button"
  = render "application/js_templates/share_button_facebook"
  = render "application/js_templates/share_button_twitter"
  = render "application/js_templates/status_selector"
  = render "application/js_templates/rating_state_label"
  = render "application/js_templates/record_sorter"
