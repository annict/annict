# frozen_string_literal: true

json = {}

json[:id] = activity.id if params.fields_contain?("#{field_prefix}id")
json[:user] = render("api/v1/users/user", user: activity.user, show_all: false, params: params, field_prefix: "user.")
json[:action] = activity.action if params.fields_contain?("#{field_prefix}action")
json[:created_at] = activity.created_at if params.fields_contain?("#{field_prefix}created_at")

case activity.action
when "create_record"
  if activity.recipient.instance_of?(Episode)
    json[:work] = render("api/v1/works/work", work: activity.recipient.work, params: params, field_prefix: "work.")
    json[:episode] = render("api/v1/episodes/episode", episode: activity.recipient, params: params, field_prefix: "episode.")
    json[:record] = render("api/v1/records/record", record: activity.trackable, params: params, field_prefix: "record.")
  else
    json[:action] = "create_review" if params.fields_contain?("#{field_prefix}action")
    json[:work] = render("api/v1/works/work", work: activity.recipient, params: params, field_prefix: "work.")
    json[:review] = render("api/v1/reviews/review", record: activity.trackable, params: params, field_prefix: "review.")
  end
when "create_multiple_records"
  json[:work] = render("api/v1/works/work", work: activity.recipient, params: params, field_prefix: "work.")
  json[:multiple_record] = render("api/v1/multiple_records/multiple_record", multiple_record: activity.trackable, params: params, field_prefix: "multiple_record.")
when "create_status"
  json[:work] = render("api/v1/works/work", work: activity.recipient, params: params, field_prefix: "work.")
  json[:status] = render("api/v1/statuses/status", status: activity.trackable, params: params, field_prefix: "status.")
end

json
