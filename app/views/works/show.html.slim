- title = t "head.title.works.show", title: @work.decorate.local_title
- description = meta_description(t("head.meta.description.works.show", title: @work.decorate.local_title))
- keywords = meta_keywords(@work.title)
- image_url = ann_image_url(@work.work_image, :attachment, size: "640x")
- set_meta_tags(title: title, description: description, keywords: keywords, og: { description: description, image: image_url }, twitter: { description: description, image: image_url }, reverse: true, prefix: false)

- breadcrumb :work_detail, @work

- content_for :head do
  script src="https://www.youtube.com/player_api"

= render "application/components/navbar"

.p-application__content
  .container.py-3.mb-3
    = render "application/components/breadcrumb"
    .row
      .col-3.pr-0
        = render "sidebar", work: @work
      .col-9
        = render "subnav", work: @work

        - unless current_user&.supporter?
          .pt-3.text-center
            = render "application/components/adsense", slots: [ENV["GOOGLE_AD_728x90_7"]], size: "728x90"

        - if @work.pvs.published.present?
          h2.h4.text-center.my-4.font-weight-bold
            = t "noun.pv"
          .c-card.mt-3.px-3.pt-3
            .row
              - @work.pvs.published.order(:sort_number).each do |pv|
                .col-4.text-center.mb-3
                  - if pv.youtube?
                    c-youtube-modal-player thumbnail-url="#{ann_image_url(pv, :thumbnail, size: "300x169")}" video-id="#{pv.youtube_video_id}" video-title="#{pv.decorate.local_title(fallback: false)}" annict-url="#{ENV.fetch('ANNICT_URL')}"
                  - else
                    = link_to pv.url, target: "_blank" do
                      .c-video-thumbnail
                        = ann_image_tag pv, :thumbnail, size: "300x169", class: "img-fluid rounded img-thumbnail"
                        = icon "play-circle", "far"
                      .small
                        = pv.title

        - if @work.decorate.local_synopsis.present?
          h2.h4.text-center.my-4.font-weight-bold = t "activerecord.attributes.work.synopsis"
          .c-card.mt-3.p-3
            = @work.decorate.local_synopsis
            .text-right.small
              span.mr-1
                = t("noun.source")
                | :
              = @work.decorate.local_synopsis_source

        h2.h4.text-center.my-4.font-weight-bold = t "noun.characters"
        .c-card.container.mt-3.py-3
          - cache [I18n.locale, @casts] do
            - casts = @casts.select { |c| locale_ja? ? true : c.support_en? }
            = render "characters/character_list", casts: casts

        h2.h4.text-center.my-4.font-weight-bold = t "noun.staffs"
        .c-card.container.mt-3.py-3
          - cache [I18n.locale, @staffs] do
            - staffs = @staffs.select { |s| locale_ja? ? true : s.support_en? }
            = render "staffs/staff_list", staffs: staffs

        - if locale_ja?
          h2.h4.text-center.my-4.font-weight-bold
            = t "noun.vods"
          .c-card.mt-3.pt-3
            .container
              = render "works/vod_list", channels: @channels, slice: 3, work: @work

        .row.align-items-center
          .col
          .col
            h2.h4.text-center.my-4.font-weight-bold
              = t "noun.reviews"
          .col.text-right
            = link_to work_reviews_path(@work), class: "btn btn-primary btn-sm" do
              = icon "edit", class: "mr-1"
              = t "verb.write_review"
        .c-card
          = render "works/review_list", work: @work, reviews: @reviews

        h2.h4.text-center.my-4.font-weight-bold
          = t "noun.stats"
        .c-card.container.mt-3.py-3
          .row
            .col
              h3.small.text-center
                | Watchers
              c-work-watchers-chart init-dataset="#{@work.watchers_chart_dataset}"
            .col
              h3.small.text-center
                | Status
              c-work-status-chart init-dataset="#{@work.status_chart_dataset}"

        .row.align-items-center
          .col
          .col
            h2.h4.text-center.my-4.font-weight-bold
              = t "noun.related_items"
          .col.text-right
            = link_to new_work_item_path(@work), class: "btn btn-primary btn-sm" do
              = icon "plus", class: "mr-1"
              = t "verb.regist_item"
        .c-card.container.py-2
          = render "works/item_list", work: @work, items: @items

        - if @series_list.present?
          h2.h4.text-center.my-4.font-weight-bold
            = t "noun.related_works"
          .c-card.container.mt-3.py-3
            - @series_list.each do |series|
              h3.text-center.mb-3
                = t("noun.series_with_name", series_name: series.decorate.local_name)
              .px-3
                = render "series/work_list", series: series, work: @work

        - unless current_user&.supporter?
          .mt-4.text-center
            = render "application/components/adsense", slots: [ENV["GOOGLE_AD_336x280_2"], ENV["GOOGLE_AD_336x280_3"]], size: "336x280"

= render "application/components/footer"

- content_for :js_templates do
  = render "application/js_templates/youtube_modal_player"
