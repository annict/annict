- title = t "head.title.db.episodes.index", work_title: @work.local_title
- set_meta_tags(title: title, reverse: true, prefix: false)

.l-topbar.container-fluid.px-3
  .row.flex-items-xs-between
    .col-8
      = render "db/application/topbar_title", parent: @work, child: t("noun.episodes")
    - if user_signed_in? && current_user.committer?
      .col.text-right
        = link_to new_db_work_episode_path(@work), class: "btn btn-outline-primary" do
          = icon "edit"
          = t "resources.episode.new_episodes"

= render "db/works/subnav", work: @work

.container-fluid.p-3
  - max_generate_episodes_count = @work.slots.only_kept.order(number: :desc).first&.number
  .alert.alert-info
    = t "messages.db.episodes.auto_generate_info_html", manual_episodes_count: (@work.manual_episodes_count.presence || t("noun.unknown")), max_generate_episodes_count: (max_generate_episodes_count.presence || 0)

  - if @episodes.present?
    .c-card
      table.table.table-hover
        thead
          tr
            th = t "noun.line_number"
            th ID
            th = t "activerecord.attributes.episode.raw_number"
            - if locale_ja?
              th = t "activerecord.attributes.episode.number"
            th = t "noun.title"
            th = t "resources.episode.previous_episode"
            th = t "activerecord.attributes.episode.sort_number"
            th = t "activerecord.attributes.episode.records_count"
            th = t "noun.state"
            th = t "head.title.db.episodes.activities"
            - if policy(@episodes).edit?
              th = t "noun.edit"
            - if policy(@episodes).hide?
              th = t "noun.state_change"
            - if policy(@episodes).destroy?
              th = t "noun.delete"
        tbody
          - @episodes.each_with_index do |episode, i|
            tr
              td = i + 1
              td = link_to episode.id, work_episode_path(@work, episode), target: "_blank"
              td = episode.raw_number.presence || "-"
              - if locale_ja?
                td = episode.number.presence || "-"
              td
                - if current_user.role.admin?
                  = episode.title.presence || "-"
                  br
                  = episode.title_en.presence || "-"
                - elsif locale == :ja
                  = episode.title.presence || "-"
                - elsif locale == :en
                  = episode.title_en.presence || "-"
              td = episode.prev_episode&.local_number.presence || "-"
              td = episode.sort_number
              td = episode.episode_records.count
              td
                .badge class="#{episode.not_deleted? ? 'badge-success' : 'badge-warning'}"
                  = t("resources.episode.state.#{episode.not_deleted? ? 'published' : 'hidden'}")
              td = link_to t("head.title.db.episodes.activities"), activities_db_episode_path(episode)
              - if policy(episode).edit?
                td
                  = link_to t("noun.edit"), edit_db_episode_path(episode), class: "btn btn-primary btn-sm"
              - if policy(episode).hide?
                td
                  - if episode.not_deleted?
                    = link_to t("noun.unpublish"), hide_db_episode_path(episode), class: "btn btn-warning btn-sm", data: { method: "patch", confirm: t("messages._common.are_you_sure") }
              - if policy(episode).destroy?
                td = link_to t("noun.delete"), db_episode_path(episode), class: "btn btn-danger btn-sm", data: { method: "delete", confirm: t("messages._common.are_you_sure") }

      = paginate @episodes
  - else
    = render "application/components/empty", text: t("messages._empty.no_episodes")
