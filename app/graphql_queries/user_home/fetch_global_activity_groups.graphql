query($first: Int, $last: Int, $before: String, $after: String) {
  activityGroups(
    orderBy: { field: CREATED_AT, direction: DESC },
    first: $first,
    last: $last,
    before: $before,
    after: $after
  ) {
    pageInfo {
      startCursor
      endCursor
      hasNextPage
      hasPreviousPage
    }

    nodes {
      id
      itemableType
      single
      activitiesCount
      createdAt

      user {
        username
        name
        avatarUrl(size: size100)
      }

      activities(first: 2) {
        pageInfo {
          endCursor
        }

        nodes {
          itemableType

          itemable {
            ... on Status {
              databaseId
              kind
              likesCount

              work {
                databaseId
                title
                titleEn
                image {
                  internalUrl1x: internalUrl(size: "100x")
                  internalUrl2x: internalUrl(size: "200x")
                }
              }
            }

            ... on EpisodeRecord {
              databaseId
              ratingState
              body
              likesCount
              commentsCount

              record {
                databaseId
              }

              work {
                databaseId
                title
                titleEn
                image {
                  internalUrl1x: internalUrl(size: "100x")
                  internalUrl2x: internalUrl(size: "200x")
                }
              }

              episode {
                databaseId
                numberText
                title
                titleEn
              }
            }

            ... on AnimeRecord {
              databaseId
              ratingOverallState
              body
              likesCount

              work {
                databaseId
                title
                titleEn
                image {
                  internalUrl1x: internalUrl(size: "100x")
                  internalUrl2x: internalUrl(size: "200x")
                }
              }
            }
          }
        }
      }
    }
  }
}
